{
	"info": {
		"_postman_id": "62552bba-e617-437a-9c15-db16de64aa8e",
		"name": "M2 SG WebCheckout",
    "description": "M2 - guest or customer API calls\n\nM2A - admin API calls\n\nFE - frontend page calls (e.g. cart page)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5289226"
	},
	"item": [
		{
      "name": "Setup",
      "item": [
        {
          "name": "M2: admin login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Body is a string\", function () {",
                  "    const token = pm.response.text().replace(/['\"]+/g, '');",
                  "    pm.expect(token).to.be.a('string');",
                  "    pm.environment.set('gen_adminToken', token);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"{{m2_admin}}\",\n  \"password\": \"{{m2_pass}}\"\n}",
              "options": {
                "raw": {
                  "headerFamily": "json",
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{m2_endpoint_api}}/integration/admin/token",
              "host": [
                "{{m2_endpoint_api}}"
              ],
              "path": [
                "integration",
                "admin",
                "token"
              ]
            },
            "description": "Create access token for admin given the customer credentials."
          },
          "response": [
            {
              "name": "200 Success.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/V1/integration/customer/token",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "V1",
                    "integration",
                    "customer",
                    "token"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "<string>"
            },
            {
              "name": "400 Bad Request",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/V1/integration/customer/token",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "V1",
                    "integration",
                    "customer",
                    "token"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"code\": \"<integer>\",\n  \"parameters\": [\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    },\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    }\n  ],\n  \"trace\": \"<string>\"\n}"
            },
            {
              "name": "Unexpected error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/V1/integration/customer/token",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "V1",
                    "integration",
                    "customer",
                    "token"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"code\": \"<integer>\",\n  \"parameters\": [\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    },\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    }\n  ],\n  \"trace\": \"<string>\"\n}"
            }
          ]
        }
      ]
    },
    {
			"name": "Customer",
			"item": [
				{
          "name": "FPC / auto-logout",
          "item": [
            {
              "name": "M2: create customer",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Save ID\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.id).to.be.a('number');",
                      "    pm.environment.set(\"gen_customer_1_id\", jsonData.id);",
                      "});"
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"password\": \"{{created_customer_1_pass}}\",\n    \"customer\": {\n        \"email\": \"{{created_customer_1_email}}\",\n        \"group_id\": 1,\n        \"default_billing\": \"1\",\n        \"default_shipping\": \"1\",\n        \"created_at\": \"2024-07-24 19:25:51\",\n        \"updated_at\": \"2024-07-24 21:55:41\",\n        \"created_in\": \"Default Store View\",\n        \"dob\": \"1975-10-19\",\n        \"firstname\": \"Test\",\n        \"lastname\": \"Tester\",\n        \"gender\": 1,\n        \"store_id\": 1,\n        \"website_id\": 1,\n        \"middlename\": \"Muramana\",\n        \"prefix\": \"DR\",\n        \"addresses\": [\n            {\n                \"region_id\": 33,\n                \"country_id\": \"US\",\n                \"street\": [\n                    \"6146 Honey Bluff Parkway\"\n                ],\n                \"telephone\": \"(555) 229-1111\",\n                \"postcode\": \"49629-1111\",\n                \"city\": \"Calder\",\n                \"firstname\": \"Test\",\n                \"lastname\": \"Tester\",\n                \"default_shipping\": true,\n                \"default_billing\": true\n            }\n        ]\n    }\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{m2_endpoint_api}}/customers",
                  "host": [
                    "{{m2_endpoint_api}}"
                  ],
                  "path": [
                    "customers"
                  ]
                },
                "description": "Create customer account. Perform necessary business operations like sending email."
              },
              "response": [
                {
                  "name": "200 Success.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"customer\": {\n    \"email\": \"<string>\",\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"group_id\": \"<integer>\",\n    \"default_billing\": \"<string>\",\n    \"default_shipping\": \"<string>\",\n    \"confirmation\": \"<string>\",\n    \"created_at\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"created_in\": \"<string>\",\n    \"dob\": \"<string>\",\n    \"middlename\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"suffix\": \"<string>\",\n    \"gender\": \"<integer>\",\n    \"store_id\": \"<integer>\",\n    \"taxvat\": \"<string>\",\n    \"website_id\": \"<integer>\",\n    \"addresses\": [\n      {\n        \"id\": \"<integer>\",\n        \"customer_id\": \"<integer>\",\n        \"region\": {\n          \"region_code\": \"<string>\",\n          \"region\": \"<string>\",\n          \"region_id\": \"<integer>\",\n          \"extension_attributes\": {}\n        },\n        \"region_id\": \"<integer>\",\n        \"country_id\": \"<string>\",\n        \"street\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"company\": \"<string>\",\n        \"telephone\": \"<string>\",\n        \"fax\": \"<string>\",\n        \"postcode\": \"<string>\",\n        \"city\": \"<string>\",\n        \"firstname\": \"<string>\",\n        \"lastname\": \"<string>\",\n        \"middlename\": \"<string>\",\n        \"prefix\": \"<string>\",\n        \"suffix\": \"<string>\",\n        \"vat_id\": \"<string>\",\n        \"default_shipping\": \"<boolean>\",\n        \"default_billing\": \"<boolean>\",\n        \"extension_attributes\": {},\n        \"custom_attributes\": [\n          {\n            \"attribute_code\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"attribute_code\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"customer_id\": \"<integer>\",\n        \"region\": {\n          \"region_code\": \"<string>\",\n          \"region\": \"<string>\",\n          \"region_id\": \"<integer>\",\n          \"extension_attributes\": {}\n        },\n        \"region_id\": \"<integer>\",\n        \"country_id\": \"<string>\",\n        \"street\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"company\": \"<string>\",\n        \"telephone\": \"<string>\",\n        \"fax\": \"<string>\",\n        \"postcode\": \"<string>\",\n        \"city\": \"<string>\",\n        \"firstname\": \"<string>\",\n        \"lastname\": \"<string>\",\n        \"middlename\": \"<string>\",\n        \"prefix\": \"<string>\",\n        \"suffix\": \"<string>\",\n        \"vat_id\": \"<string>\",\n        \"default_shipping\": \"<boolean>\",\n        \"default_billing\": \"<boolean>\",\n        \"extension_attributes\": {},\n        \"custom_attributes\": [\n          {\n            \"attribute_code\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"attribute_code\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"disable_auto_group_change\": \"<integer>\",\n    \"extension_attributes\": {\n      \"assistance_allowed\": \"<integer>\",\n      \"is_subscribed\": \"<boolean>\"\n    },\n    \"custom_attributes\": [\n      {\n        \"attribute_code\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"attribute_code\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"password\": \"<string>\",\n  \"redirectUrl\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/V1/customers",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "V1",
                        "customers"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"email\": \"<string>\",\n  \"firstname\": \"<string>\",\n  \"lastname\": \"<string>\",\n  \"id\": \"<integer>\",\n  \"group_id\": \"<integer>\",\n  \"default_billing\": \"<string>\",\n  \"default_shipping\": \"<string>\",\n  \"confirmation\": \"<string>\",\n  \"created_at\": \"<string>\",\n  \"updated_at\": \"<string>\",\n  \"created_in\": \"<string>\",\n  \"dob\": \"<string>\",\n  \"middlename\": \"<string>\",\n  \"prefix\": \"<string>\",\n  \"suffix\": \"<string>\",\n  \"gender\": \"<integer>\",\n  \"store_id\": \"<integer>\",\n  \"taxvat\": \"<string>\",\n  \"website_id\": \"<integer>\",\n  \"addresses\": [\n    {\n      \"id\": \"<integer>\",\n      \"customer_id\": \"<integer>\",\n      \"region\": {\n        \"region_code\": \"<string>\",\n        \"region\": \"<string>\",\n        \"region_id\": \"<integer>\",\n        \"extension_attributes\": {}\n      },\n      \"region_id\": \"<integer>\",\n      \"country_id\": \"<string>\",\n      \"street\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"company\": \"<string>\",\n      \"telephone\": \"<string>\",\n      \"fax\": \"<string>\",\n      \"postcode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"middlename\": \"<string>\",\n      \"prefix\": \"<string>\",\n      \"suffix\": \"<string>\",\n      \"vat_id\": \"<string>\",\n      \"default_shipping\": \"<boolean>\",\n      \"default_billing\": \"<boolean>\",\n      \"extension_attributes\": {},\n      \"custom_attributes\": [\n        {\n          \"attribute_code\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"attribute_code\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"customer_id\": \"<integer>\",\n      \"region\": {\n        \"region_code\": \"<string>\",\n        \"region\": \"<string>\",\n        \"region_id\": \"<integer>\",\n        \"extension_attributes\": {}\n      },\n      \"region_id\": \"<integer>\",\n      \"country_id\": \"<string>\",\n      \"street\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"company\": \"<string>\",\n      \"telephone\": \"<string>\",\n      \"fax\": \"<string>\",\n      \"postcode\": \"<string>\",\n      \"city\": \"<string>\",\n      \"firstname\": \"<string>\",\n      \"lastname\": \"<string>\",\n      \"middlename\": \"<string>\",\n      \"prefix\": \"<string>\",\n      \"suffix\": \"<string>\",\n      \"vat_id\": \"<string>\",\n      \"default_shipping\": \"<boolean>\",\n      \"default_billing\": \"<boolean>\",\n      \"extension_attributes\": {},\n      \"custom_attributes\": [\n        {\n          \"attribute_code\": \"<string>\",\n          \"value\": \"<string>\"\n        },\n        {\n          \"attribute_code\": \"<string>\",\n          \"value\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"disable_auto_group_change\": \"<integer>\",\n  \"extension_attributes\": {\n    \"assistance_allowed\": \"<integer>\",\n    \"is_subscribed\": \"<boolean>\"\n  },\n  \"custom_attributes\": [\n    {\n      \"attribute_code\": \"<string>\",\n      \"value\": \"<string>\"\n    },\n    {\n      \"attribute_code\": \"<string>\",\n      \"value\": \"<string>\"\n    }\n  ]\n}"
                },
                {
                  "name": "Internal Server error",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"customer\": {\n    \"email\": \"<string>\",\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"group_id\": \"<integer>\",\n    \"default_billing\": \"<string>\",\n    \"default_shipping\": \"<string>\",\n    \"confirmation\": \"<string>\",\n    \"created_at\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"created_in\": \"<string>\",\n    \"dob\": \"<string>\",\n    \"middlename\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"suffix\": \"<string>\",\n    \"gender\": \"<integer>\",\n    \"store_id\": \"<integer>\",\n    \"taxvat\": \"<string>\",\n    \"website_id\": \"<integer>\",\n    \"addresses\": [\n      {\n        \"id\": \"<integer>\",\n        \"customer_id\": \"<integer>\",\n        \"region\": {\n          \"region_code\": \"<string>\",\n          \"region\": \"<string>\",\n          \"region_id\": \"<integer>\",\n          \"extension_attributes\": {}\n        },\n        \"region_id\": \"<integer>\",\n        \"country_id\": \"<string>\",\n        \"street\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"company\": \"<string>\",\n        \"telephone\": \"<string>\",\n        \"fax\": \"<string>\",\n        \"postcode\": \"<string>\",\n        \"city\": \"<string>\",\n        \"firstname\": \"<string>\",\n        \"lastname\": \"<string>\",\n        \"middlename\": \"<string>\",\n        \"prefix\": \"<string>\",\n        \"suffix\": \"<string>\",\n        \"vat_id\": \"<string>\",\n        \"default_shipping\": \"<boolean>\",\n        \"default_billing\": \"<boolean>\",\n        \"extension_attributes\": {},\n        \"custom_attributes\": [\n          {\n            \"attribute_code\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"attribute_code\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"customer_id\": \"<integer>\",\n        \"region\": {\n          \"region_code\": \"<string>\",\n          \"region\": \"<string>\",\n          \"region_id\": \"<integer>\",\n          \"extension_attributes\": {}\n        },\n        \"region_id\": \"<integer>\",\n        \"country_id\": \"<string>\",\n        \"street\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"company\": \"<string>\",\n        \"telephone\": \"<string>\",\n        \"fax\": \"<string>\",\n        \"postcode\": \"<string>\",\n        \"city\": \"<string>\",\n        \"firstname\": \"<string>\",\n        \"lastname\": \"<string>\",\n        \"middlename\": \"<string>\",\n        \"prefix\": \"<string>\",\n        \"suffix\": \"<string>\",\n        \"vat_id\": \"<string>\",\n        \"default_shipping\": \"<boolean>\",\n        \"default_billing\": \"<boolean>\",\n        \"extension_attributes\": {},\n        \"custom_attributes\": [\n          {\n            \"attribute_code\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"attribute_code\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"disable_auto_group_change\": \"<integer>\",\n    \"extension_attributes\": {\n      \"assistance_allowed\": \"<integer>\",\n      \"is_subscribed\": \"<boolean>\"\n    },\n    \"custom_attributes\": [\n      {\n        \"attribute_code\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"attribute_code\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"password\": \"<string>\",\n  \"redirectUrl\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/V1/customers",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "V1",
                        "customers"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"code\": \"<integer>\",\n  \"parameters\": [\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    },\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    }\n  ],\n  \"trace\": \"<string>\"\n}"
                },
                {
                  "name": "Unexpected error",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"customer\": {\n    \"email\": \"<string>\",\n    \"firstname\": \"<string>\",\n    \"lastname\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"group_id\": \"<integer>\",\n    \"default_billing\": \"<string>\",\n    \"default_shipping\": \"<string>\",\n    \"confirmation\": \"<string>\",\n    \"created_at\": \"<string>\",\n    \"updated_at\": \"<string>\",\n    \"created_in\": \"<string>\",\n    \"dob\": \"<string>\",\n    \"middlename\": \"<string>\",\n    \"prefix\": \"<string>\",\n    \"suffix\": \"<string>\",\n    \"gender\": \"<integer>\",\n    \"store_id\": \"<integer>\",\n    \"taxvat\": \"<string>\",\n    \"website_id\": \"<integer>\",\n    \"addresses\": [\n      {\n        \"id\": \"<integer>\",\n        \"customer_id\": \"<integer>\",\n        \"region\": {\n          \"region_code\": \"<string>\",\n          \"region\": \"<string>\",\n          \"region_id\": \"<integer>\",\n          \"extension_attributes\": {}\n        },\n        \"region_id\": \"<integer>\",\n        \"country_id\": \"<string>\",\n        \"street\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"company\": \"<string>\",\n        \"telephone\": \"<string>\",\n        \"fax\": \"<string>\",\n        \"postcode\": \"<string>\",\n        \"city\": \"<string>\",\n        \"firstname\": \"<string>\",\n        \"lastname\": \"<string>\",\n        \"middlename\": \"<string>\",\n        \"prefix\": \"<string>\",\n        \"suffix\": \"<string>\",\n        \"vat_id\": \"<string>\",\n        \"default_shipping\": \"<boolean>\",\n        \"default_billing\": \"<boolean>\",\n        \"extension_attributes\": {},\n        \"custom_attributes\": [\n          {\n            \"attribute_code\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"attribute_code\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      },\n      {\n        \"id\": \"<integer>\",\n        \"customer_id\": \"<integer>\",\n        \"region\": {\n          \"region_code\": \"<string>\",\n          \"region\": \"<string>\",\n          \"region_id\": \"<integer>\",\n          \"extension_attributes\": {}\n        },\n        \"region_id\": \"<integer>\",\n        \"country_id\": \"<string>\",\n        \"street\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"company\": \"<string>\",\n        \"telephone\": \"<string>\",\n        \"fax\": \"<string>\",\n        \"postcode\": \"<string>\",\n        \"city\": \"<string>\",\n        \"firstname\": \"<string>\",\n        \"lastname\": \"<string>\",\n        \"middlename\": \"<string>\",\n        \"prefix\": \"<string>\",\n        \"suffix\": \"<string>\",\n        \"vat_id\": \"<string>\",\n        \"default_shipping\": \"<boolean>\",\n        \"default_billing\": \"<boolean>\",\n        \"extension_attributes\": {},\n        \"custom_attributes\": [\n          {\n            \"attribute_code\": \"<string>\",\n            \"value\": \"<string>\"\n          },\n          {\n            \"attribute_code\": \"<string>\",\n            \"value\": \"<string>\"\n          }\n        ]\n      }\n    ],\n    \"disable_auto_group_change\": \"<integer>\",\n    \"extension_attributes\": {\n      \"assistance_allowed\": \"<integer>\",\n      \"is_subscribed\": \"<boolean>\"\n    },\n    \"custom_attributes\": [\n      {\n        \"attribute_code\": \"<string>\",\n        \"value\": \"<string>\"\n      },\n      {\n        \"attribute_code\": \"<string>\",\n        \"value\": \"<string>\"\n      }\n    ]\n  },\n  \"password\": \"<string>\",\n  \"redirectUrl\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/V1/customers",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "V1",
                        "customers"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"code\": \"<integer>\",\n  \"parameters\": [\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    },\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    }\n  ],\n  \"trace\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "M2: user login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Body is a string\", function () {",
                      "    const token = pm.response.text().replace(/['\"]+/g, '');",
                      "    pm.expect(token).to.be.a('string');",
                      "    pm.environment.set('gen_customerToken', token);",
                      "});"
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"{{created_customer_1_email}}\",\n  \"password\": \"{{created_customer_1_pass}}\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{m2_endpoint_api}}/integration/customer/token",
                  "host": [
                    "{{m2_endpoint_api}}"
                  ],
                  "path": [
                    "integration",
                    "customer",
                    "token"
                  ]
                },
                "description": "Create access token for admin given the customer credentials."
              },
              "response": [
                {
                  "name": "200 Success.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/V1/integration/customer/token",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "V1",
                        "integration",
                        "customer",
                        "token"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "<string>"
                },
                {
                  "name": "400 Bad Request",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/V1/integration/customer/token",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "V1",
                        "integration",
                        "customer",
                        "token"
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"code\": \"<integer>\",\n  \"parameters\": [\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    },\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    }\n  ],\n  \"trace\": \"<string>\"\n}"
                },
                {
                  "name": "Unexpected error",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/V1/integration/customer/token",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "V1",
                        "integration",
                        "customer",
                        "token"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"code\": \"<integer>\",\n  \"parameters\": [\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    },\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    }\n  ],\n  \"trace\": \"<string>\"\n}"
                }
              ]
            },
            {
              "name": "M2: Token API",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has token\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.token).to.be.a('string')",
                      "    pm.environment.set(\"gen_sgToken\", jsonData.token);",
                      "    pm.expect(jsonData.expiration).to.be.a('number');",
                      "});"
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{gen_customerToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{m2_endpoint_api_sgwebc}}/me/token",
                  "host": [
                    "{{m2_endpoint_api_sgwebc}}"
                  ],
                  "path": [
                    "me",
                    "token"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "FE: auto-login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Load the HTML response to $",
                      "const pkg = require('cheerio')",
                      "const $ = pkg.load(pm.response.text());",
                      "",
                      "pm.test(\"Check login status\", function () {",
                      "    const bodyClass = $('body.customer-account-index');",
                      "    pm.expect(bodyClass).to.be.lengthOf(1);",
                      "});"
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{m2_endpoint_fe_sgwebc}}/account/login?token={{gen_sgToken}}&redirectTo=customer/account&sgcloud_checkout=1",
                  "host": [
                    "{{m2_endpoint_fe_sgwebc}}"
                  ],
                  "path": [
                    "account",
                    "login"
                  ],
                  "query": [
                    {
                      "key": "token",
                      "value": "{{gen_sgToken}}"
                    },
                    {
                      "key": "redirectTo",
                      "value": "customer/account"
                    },
                    {
                      "key": "sgcloud_checkout",
                      "value": "1"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "FE: save authToken",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Load the HTML response to $",
                      "const pkg = require('cheerio')",
                      "const $ = pkg.load(pm.response.text());",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Check controller\", function () {",
                      "    const bodyClass = $('body.sgwebcheckout-account-registered');",
                      "    pm.expect(bodyClass).to.be.lengthOf(1);",
                      "});",
                      "pm.test(\"Check registered token\", function () {",
                      "    const script = $('script[type=\"text/x-magento-init\"]:contains(\"Shopgate_WebCheckout\")');",
                      "    pm.expect(script).to.be.lengthOf(1);",
                      "",
                      "    // data test",
                      "    pm.expect(script[0].children[0].data).to.be.a('string');",
                      "    const data = JSON.parse(script[0].children[0].data);",
                      "    const definition = data['*']['Shopgate_WebCheckout/js/init'];",
                      "    pm.expect(definition.properties.token).to.be.a('string', 'no token in property export');",
                      "    // save token to test FPC & auto-logout later",
                      "    pm.environment.set(\"gen_customer_1_authToken\", definition.properties.token);",
                      "});"
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{m2_endpoint_fe_sgwebc}}/account/registered",
                  "host": [
                    "{{m2_endpoint_fe_sgwebc}}"
                  ],
                  "path": [
                    "account",
                    "registered"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "M2A: delete customer",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{gen_adminToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{m2_endpoint_api}}/customers/:id",
                  "host": [
                    "{{m2_endpoint_api}}"
                  ],
                  "path": [
                    "customers",
                    ":id"
                  ],
                  "variable": [
                    {
                      "key": "id",
                      "value": "{{gen_customer_1_id}}"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Testing customer controller FPC. Making sure the parts that shouldn't be cached are not cached (e.g. pipeline authToken calls)\n\nAlso not clearing session after created customer, thus checking if auto-logout is happening.\n\nUnfortunately, I cannot test the \"checkout success\" page & whether it gets cached. Supposedly it shouldn't as the default M2 sets it to be non-cachable, but maybe one day..."
        },
        {
					"name": "M2: user login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body is a string\", function () {",
									"    const token = pm.response.text().replace(/['\"]+/g, '');",
									"    pm.expect(token).to.be.a('string');",
									"    pm.environment.set('gen_customerToken', token);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{default_customer_email}}\",\n  \"password\": \"{{default_customer_pass}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{m2_endpoint_api}}/integration/customer/token",
							"host": [
								"{{m2_endpoint_api}}"
							],
							"path": [
								"integration",
								"customer",
								"token"
							]
						},
						"description": "Create access token for admin given the customer credentials."
					},
					"response": [
						{
							"name": "200 Success.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/V1/integration/customer/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"V1",
										"integration",
										"customer",
										"token"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "<string>"
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/V1/integration/customer/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"V1",
										"integration",
										"customer",
										"token"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"code\": \"<integer>\",\n  \"parameters\": [\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    },\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    }\n  ],\n  \"trace\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"password\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/V1/integration/customer/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"V1",
										"integration",
										"customer",
										"token"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"code\": \"<integer>\",\n  \"parameters\": [\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    },\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    }\n  ],\n  \"trace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "M2: Token API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.be.a('string')",
									"    pm.environment.set(\"gen_sgToken\", jsonData.token);",
									"    pm.expect(jsonData.expiration).to.be.a('number');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{gen_customerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{m2_endpoint_api_sgwebc}}/me/token",
							"host": [
								"{{m2_endpoint_api_sgwebc}}"
							],
							"path": [
								"me",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "FE: auto-login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Load the HTML response to $",
									"const pkg = require('cheerio')",
									"const $ = pkg.load(pm.response.text());",
									"",
									"pm.test(\"Check login status\", function () {",
									"    const bodyClass = $('body.customer-account-index');",
									"    pm.expect(bodyClass).to.be.lengthOf(1);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{m2_endpoint_fe_sgwebc}}/account/login?token={{gen_sgToken}}&redirectTo=customer/account&sgcloud_checkout=1",
							"host": [
								"{{m2_endpoint_fe_sgwebc}}"
							],
							"path": [
								"account",
								"login"
							],
							"query": [
								{
									"key": "token",
									"value": "{{gen_sgToken}}"
								},
								{
									"key": "redirectTo",
									"value": "customer/account"
								},
								{
									"key": "sgcloud_checkout",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "FE: customer session persistent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Load the HTML response to $",
									"const pkg = require('cheerio')",
									"const $ = pkg.load(pm.response.text());",
									"",
									"pm.test(\"Check login status\", function () {",
									"    const bodyClass = $('body.customer-account-index');",
									"    pm.expect(bodyClass).to.be.lengthOf(1);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/customer/account",
							"host": [
								"{{domain}}"
							],
							"path": [
								"customer",
								"account"
							]
						}
					},
					"response": []
				},
				{
					"name": "FE: check registered token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Load the HTML response to $",
									"const pkg = require('cheerio')",
									"const $ = pkg.load(pm.response.text());",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check controller\", function () {",
									"    const bodyClass = $('body.sgwebcheckout-account-registered');",
									"    pm.expect(bodyClass).to.be.lengthOf(1);",
									"});",
									"pm.test(\"Check registered token\", function () {",
									"    const script = $('script[type=\"text/x-magento-init\"]:contains(\"Shopgate_WebCheckout\")');",
									"    pm.expect(script).to.be.lengthOf(1);",
									"",
									"    // data test",
									"    pm.expect(script[0].children[0].data).to.be.a('string');",
									"    const data = JSON.parse(script[0].children[0].data);",
									"    const definition = data['*']['Shopgate_WebCheckout/js/init'];",
									"    pm.expect(definition.properties.token).to.be.a('string', 'no token in property export');",
                  "",
                  "    // check that FPC did not cache previous customer token",
                  "    pm.expect(definition.properties.token).to.not.eql(",
                  "        pm.environment.get('gen_customer_1_authToken'),",
                  "        'FPC cached previius customer authToken'",
                  "    );",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{m2_endpoint_fe_sgwebc}}/account/registered",
							"host": [
								"{{m2_endpoint_fe_sgwebc}}"
							],
							"path": [
								"account",
								"registered"
							]
						}
					},
					"response": []
				},
				{
					"name": "FE: unset cookie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Load the HTML response to $",
									"const pkg = require('cheerio')",
									"const $ = pkg.load(pm.response.text());",
									"",
									"pm.test(\"Check login status\", function () {",
									"    const bodyClass = $('body.customer-account-login');",
									"    pm.expect(bodyClass).to.be.lengthOf(1);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Allow cookie deletion by going to cookies -> Domain Allowlist",
									"const jar = pm.cookies.jar();",
									"jar.unset(pm.environment.get(\"host\"), 'PHPSESSID', function (error) {",
									"    if (error) {",
									"        console.log(error.message)",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/customer/account",
							"host": [
								"{{domain}}"
							],
							"path": [
								"customer",
								"account"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Guest",
			"item": [
				{
          "name": "M2: create guest cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body is a string\", function () {",
									"    const cartId = pm.response.text().replace(/['\"]+/g, '');",
									"    pm.expect(cartId).to.be.a('string');",
									"    pm.environment.set('gen_cartId', cartId);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{m2_endpoint_api}}/guest-carts",
							"host": [
								"{{m2_endpoint_api}}"
							],
							"path": [
								"guest-carts"
							]
						},
						"description": "Enable an customer or guest user to create an empty cart and quote for an anonymous customer."
					},
					"response": [
						{
							"name": "200 Success.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/V1/guest-carts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"V1",
										"guest-carts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "<string>"
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/V1/guest-carts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"V1",
										"guest-carts"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"code\": \"<integer>\",\n  \"parameters\": [\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    },\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    }\n  ],\n  \"trace\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/V1/guest-carts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"V1",
										"guest-carts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"code\": \"<integer>\",\n  \"parameters\": [\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    },\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    }\n  ],\n  \"trace\": \"<string>\"\n}"
						}
					]
				},
				{
          "name": "M2: add prod 1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n  addSimpleProductsToCart(\n    input: {\n      cart_id: \"{{gen_cartId}}\", \n      cart_items: [{\n        data: {\n          quantity: 1\n          sku: \"24-WG02\"\n        }\n      }]\n    }) {\n    cart {\n      id\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{domain}}/graphql",
							"host": [
								"{{domain}}"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Add/update the specified cart item."
					},
					"response": [
						{
							"name": "200 Success.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cartItem\": {\n    \"qty\": \"<number>\",\n    \"quote_id\": \"<string>\",\n    \"item_id\": \"<integer>\",\n    \"sku\": \"<string>\",\n    \"name\": \"<string>\",\n    \"price\": \"<number>\",\n    \"product_type\": \"<string>\",\n    \"product_option\": {\n      \"extension_attributes\": {\n        \"custom_options\": [\n          {\n            \"option_id\": \"<string>\",\n            \"option_value\": \"<string>\",\n            \"extension_attributes\": {\n              \"file_info\": {\n                \"base64_encoded_data\": \"<string>\",\n                \"type\": \"<string>\",\n                \"name\": \"<string>\"\n              }\n            }\n          },\n          {\n            \"option_id\": \"<string>\",\n            \"option_value\": \"<string>\",\n            \"extension_attributes\": {\n              \"file_info\": {\n                \"base64_encoded_data\": \"<string>\",\n                \"type\": \"<string>\",\n                \"name\": \"<string>\"\n              }\n            }\n          }\n        ],\n        \"bundle_options\": [\n          {\n            \"option_id\": \"<integer>\",\n            \"option_qty\": \"<integer>\",\n            \"option_selections\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"extension_attributes\": {}\n          },\n          {\n            \"option_id\": \"<integer>\",\n            \"option_qty\": \"<integer>\",\n            \"option_selections\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"extension_attributes\": {}\n          }\n        ],\n        \"downloadable_option\": {\n          \"downloadable_links\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        \"configurable_item_options\": [\n          {\n            \"option_id\": \"<string>\",\n            \"option_value\": \"<integer>\",\n            \"extension_attributes\": {}\n          },\n          {\n            \"option_id\": \"<string>\",\n            \"option_value\": \"<integer>\",\n            \"extension_attributes\": {}\n          }\n        ],\n        \"grouped_options\": [\n          {\n            \"id\": \"<integer>\",\n            \"qty\": \"<integer>\",\n            \"extension_attributes\": {}\n          },\n          {\n            \"id\": \"<integer>\",\n            \"qty\": \"<integer>\",\n            \"extension_attributes\": {}\n          }\n        ]\n      }\n    },\n    \"extension_attributes\": {\n      \"discounts\": [\n        {\n          \"discount_data\": {\n            \"amount\": \"<number>\",\n            \"base_amount\": \"<number>\",\n            \"original_amount\": \"<number>\",\n            \"base_original_amount\": \"<number>\"\n          },\n          \"rule_label\": \"<string>\",\n          \"rule_id\": \"<integer>\"\n        },\n        {\n          \"discount_data\": {\n            \"amount\": \"<number>\",\n            \"base_amount\": \"<number>\",\n            \"original_amount\": \"<number>\",\n            \"base_original_amount\": \"<number>\"\n          },\n          \"rule_label\": \"<string>\",\n          \"rule_id\": \"<integer>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/V1/guest-carts/:cartId/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"V1",
										"guest-carts",
										":cartId",
										"items"
									],
									"variable": [
										{
											"key": "cartId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"qty\": \"<number>\",\n  \"quote_id\": \"<string>\",\n  \"item_id\": \"<integer>\",\n  \"sku\": \"<string>\",\n  \"name\": \"<string>\",\n  \"price\": \"<number>\",\n  \"product_type\": \"<string>\",\n  \"product_option\": {\n    \"extension_attributes\": {\n      \"custom_options\": [\n        {\n          \"option_id\": \"<string>\",\n          \"option_value\": \"<string>\",\n          \"extension_attributes\": {\n            \"file_info\": {\n              \"base64_encoded_data\": \"<string>\",\n              \"type\": \"<string>\",\n              \"name\": \"<string>\"\n            }\n          }\n        },\n        {\n          \"option_id\": \"<string>\",\n          \"option_value\": \"<string>\",\n          \"extension_attributes\": {\n            \"file_info\": {\n              \"base64_encoded_data\": \"<string>\",\n              \"type\": \"<string>\",\n              \"name\": \"<string>\"\n            }\n          }\n        }\n      ],\n      \"bundle_options\": [\n        {\n          \"option_id\": \"<integer>\",\n          \"option_qty\": \"<integer>\",\n          \"option_selections\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"extension_attributes\": {}\n        },\n        {\n          \"option_id\": \"<integer>\",\n          \"option_qty\": \"<integer>\",\n          \"option_selections\": [\n            \"<integer>\",\n            \"<integer>\"\n          ],\n          \"extension_attributes\": {}\n        }\n      ],\n      \"downloadable_option\": {\n        \"downloadable_links\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      },\n      \"configurable_item_options\": [\n        {\n          \"option_id\": \"<string>\",\n          \"option_value\": \"<integer>\",\n          \"extension_attributes\": {}\n        },\n        {\n          \"option_id\": \"<string>\",\n          \"option_value\": \"<integer>\",\n          \"extension_attributes\": {}\n        }\n      ],\n      \"grouped_options\": [\n        {\n          \"id\": \"<integer>\",\n          \"qty\": \"<integer>\",\n          \"extension_attributes\": {}\n        },\n        {\n          \"id\": \"<integer>\",\n          \"qty\": \"<integer>\",\n          \"extension_attributes\": {}\n        }\n      ]\n    }\n  },\n  \"extension_attributes\": {\n    \"discounts\": [\n      {\n        \"discount_data\": {\n          \"amount\": \"<number>\",\n          \"base_amount\": \"<number>\",\n          \"original_amount\": \"<number>\",\n          \"base_original_amount\": \"<number>\"\n        },\n        \"rule_label\": \"<string>\",\n        \"rule_id\": \"<integer>\"\n      },\n      {\n        \"discount_data\": {\n          \"amount\": \"<number>\",\n          \"base_amount\": \"<number>\",\n          \"original_amount\": \"<number>\",\n          \"base_original_amount\": \"<number>\"\n        },\n        \"rule_label\": \"<string>\",\n        \"rule_id\": \"<integer>\"\n      }\n    ]\n  }\n}"
						},
						{
							"name": "400 Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cartItem\": {\n    \"qty\": \"<number>\",\n    \"quote_id\": \"<string>\",\n    \"item_id\": \"<integer>\",\n    \"sku\": \"<string>\",\n    \"name\": \"<string>\",\n    \"price\": \"<number>\",\n    \"product_type\": \"<string>\",\n    \"product_option\": {\n      \"extension_attributes\": {\n        \"custom_options\": [\n          {\n            \"option_id\": \"<string>\",\n            \"option_value\": \"<string>\",\n            \"extension_attributes\": {\n              \"file_info\": {\n                \"base64_encoded_data\": \"<string>\",\n                \"type\": \"<string>\",\n                \"name\": \"<string>\"\n              }\n            }\n          },\n          {\n            \"option_id\": \"<string>\",\n            \"option_value\": \"<string>\",\n            \"extension_attributes\": {\n              \"file_info\": {\n                \"base64_encoded_data\": \"<string>\",\n                \"type\": \"<string>\",\n                \"name\": \"<string>\"\n              }\n            }\n          }\n        ],\n        \"bundle_options\": [\n          {\n            \"option_id\": \"<integer>\",\n            \"option_qty\": \"<integer>\",\n            \"option_selections\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"extension_attributes\": {}\n          },\n          {\n            \"option_id\": \"<integer>\",\n            \"option_qty\": \"<integer>\",\n            \"option_selections\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"extension_attributes\": {}\n          }\n        ],\n        \"downloadable_option\": {\n          \"downloadable_links\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        \"configurable_item_options\": [\n          {\n            \"option_id\": \"<string>\",\n            \"option_value\": \"<integer>\",\n            \"extension_attributes\": {}\n          },\n          {\n            \"option_id\": \"<string>\",\n            \"option_value\": \"<integer>\",\n            \"extension_attributes\": {}\n          }\n        ],\n        \"grouped_options\": [\n          {\n            \"id\": \"<integer>\",\n            \"qty\": \"<integer>\",\n            \"extension_attributes\": {}\n          },\n          {\n            \"id\": \"<integer>\",\n            \"qty\": \"<integer>\",\n            \"extension_attributes\": {}\n          }\n        ]\n      }\n    },\n    \"extension_attributes\": {\n      \"discounts\": [\n        {\n          \"discount_data\": {\n            \"amount\": \"<number>\",\n            \"base_amount\": \"<number>\",\n            \"original_amount\": \"<number>\",\n            \"base_original_amount\": \"<number>\"\n          },\n          \"rule_label\": \"<string>\",\n          \"rule_id\": \"<integer>\"\n        },\n        {\n          \"discount_data\": {\n            \"amount\": \"<number>\",\n            \"base_amount\": \"<number>\",\n            \"original_amount\": \"<number>\",\n            \"base_original_amount\": \"<number>\"\n          },\n          \"rule_label\": \"<string>\",\n          \"rule_id\": \"<integer>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/V1/guest-carts/:cartId/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"V1",
										"guest-carts",
										":cartId",
										"items"
									],
									"variable": [
										{
											"key": "cartId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"code\": \"<integer>\",\n  \"parameters\": [\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    },\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    }\n  ],\n  \"trace\": \"<string>\"\n}"
						},
						{
							"name": "Unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cartItem\": {\n    \"qty\": \"<number>\",\n    \"quote_id\": \"<string>\",\n    \"item_id\": \"<integer>\",\n    \"sku\": \"<string>\",\n    \"name\": \"<string>\",\n    \"price\": \"<number>\",\n    \"product_type\": \"<string>\",\n    \"product_option\": {\n      \"extension_attributes\": {\n        \"custom_options\": [\n          {\n            \"option_id\": \"<string>\",\n            \"option_value\": \"<string>\",\n            \"extension_attributes\": {\n              \"file_info\": {\n                \"base64_encoded_data\": \"<string>\",\n                \"type\": \"<string>\",\n                \"name\": \"<string>\"\n              }\n            }\n          },\n          {\n            \"option_id\": \"<string>\",\n            \"option_value\": \"<string>\",\n            \"extension_attributes\": {\n              \"file_info\": {\n                \"base64_encoded_data\": \"<string>\",\n                \"type\": \"<string>\",\n                \"name\": \"<string>\"\n              }\n            }\n          }\n        ],\n        \"bundle_options\": [\n          {\n            \"option_id\": \"<integer>\",\n            \"option_qty\": \"<integer>\",\n            \"option_selections\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"extension_attributes\": {}\n          },\n          {\n            \"option_id\": \"<integer>\",\n            \"option_qty\": \"<integer>\",\n            \"option_selections\": [\n              \"<integer>\",\n              \"<integer>\"\n            ],\n            \"extension_attributes\": {}\n          }\n        ],\n        \"downloadable_option\": {\n          \"downloadable_links\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        \"configurable_item_options\": [\n          {\n            \"option_id\": \"<string>\",\n            \"option_value\": \"<integer>\",\n            \"extension_attributes\": {}\n          },\n          {\n            \"option_id\": \"<string>\",\n            \"option_value\": \"<integer>\",\n            \"extension_attributes\": {}\n          }\n        ],\n        \"grouped_options\": [\n          {\n            \"id\": \"<integer>\",\n            \"qty\": \"<integer>\",\n            \"extension_attributes\": {}\n          },\n          {\n            \"id\": \"<integer>\",\n            \"qty\": \"<integer>\",\n            \"extension_attributes\": {}\n          }\n        ]\n      }\n    },\n    \"extension_attributes\": {\n      \"discounts\": [\n        {\n          \"discount_data\": {\n            \"amount\": \"<number>\",\n            \"base_amount\": \"<number>\",\n            \"original_amount\": \"<number>\",\n            \"base_original_amount\": \"<number>\"\n          },\n          \"rule_label\": \"<string>\",\n          \"rule_id\": \"<integer>\"\n        },\n        {\n          \"discount_data\": {\n            \"amount\": \"<number>\",\n            \"base_amount\": \"<number>\",\n            \"original_amount\": \"<number>\",\n            \"base_original_amount\": \"<number>\"\n          },\n          \"rule_label\": \"<string>\",\n          \"rule_id\": \"<integer>\"\n        }\n      ]\n    }\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/V1/guest-carts/:cartId/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"V1",
										"guest-carts",
										":cartId",
										"items"
									],
									"variable": [
										{
											"key": "cartId"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"errors\": [\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"message\": \"<string>\",\n      \"parameters\": [\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        },\n        {\n          \"resources\": \"<string>\",\n          \"fieldName\": \"<string>\",\n          \"fieldValue\": \"<string>\"\n        }\n      ]\n    }\n  ],\n  \"code\": \"<integer>\",\n  \"parameters\": [\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    },\n    {\n      \"resources\": \"<string>\",\n      \"fieldName\": \"<string>\",\n      \"fieldValue\": \"<string>\"\n    }\n  ],\n  \"trace\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "M2: Guest Token API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.be.a('string')",
									"    pm.environment.set(\"gen_guest_sgToken\", jsonData.token);",
									"    pm.expect(jsonData.expiration).to.be.a('number');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{m2_endpoint_api_sgwebc}}/:cartId/token",
							"host": [
								"{{m2_endpoint_api_sgwebc}}"
							],
							"path": [
								":cartId",
								"token"
							],
							"variable": [
								{
									"key": "cartId",
									"value": "{{gen_cartId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "FE: auto-login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Load the HTML response to $",
									"const pkg = require('cheerio')",
									"const $ = pkg.load(pm.response.text());",
									"",
									"pm.test(\"Check login status\", function () {",
									"    const input = $('input[data-item-qty]');",
									"    pm.expect(input).to.be.lengthOf(1);",
									"    pm.expect(input[0].attribs.value).to.eql('1');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{m2_endpoint_fe_sgwebc}}/account/login?sgcloud_checkout=1&token={{gen_guest_sgToken}}",
							"host": [
								"{{m2_endpoint_fe_sgwebc}}"
							],
							"path": [
								"account",
								"login"
							],
							"query": [
								{
									"key": "sgcloud_checkout",
									"value": "1"
								},
								{
									"key": "redirectTo",
									"value": "registered",
									"disabled": true
								},
								{
									"key": "token",
									"value": "{{gen_guest_sgToken}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "FE:  check register page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Load the HTML response to $",
									"const pkg = require('cheerio')",
									"const $ = pkg.load(pm.response.text());",
									"",
									"pm.test(\"Check page\", function () {",
									"    const input = $('body.is-sg-app.customer-account-create');",
									"    pm.expect(input).to.be.lengthOf(1);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{m2_endpoint_fe_sgwebc}}/account/login?sgcloud_checkout=1&redirectTo={{domain}}/customer/account/create&token={{gen_guest_sgToken}}",
							"host": [
								"{{m2_endpoint_fe_sgwebc}}"
							],
							"path": [
								"account",
								"login"
							],
							"query": [
								{
									"key": "sgcloud_checkout",
									"value": "1"
								},
								{
									"key": "redirectTo",
									"value": "{{domain}}/customer/account/create"
								},
								{
									"key": "token",
									"value": "{{gen_guest_sgToken}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "FE: check cart persistent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Load the HTML response to $",
									"const pkg = require('cheerio')",
									"const $ = pkg.load(pm.response.text());",
									"",
									"pm.test(\"Check login status\", function () {",
									"    const input = $('input[data-item-qty]');",
									"    pm.expect(input).to.be.lengthOf(1);",
									"    pm.expect(input[0].attribs.value).to.eql('1');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/checkout/cart",
							"host": [
								"{{domain}}"
							],
							"path": [
								"checkout",
								"cart"
							]
						}
					},
					"response": []
				},
				{
					"name": "FE: unset cookie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Load the HTML response to $",
									"const pkg = require('cheerio')",
									"const $ = pkg.load(pm.response.text());",
									"",
									"pm.test(\"Check login status\", function () {",
									"    const input = $('.cart-empty');",
									"    pm.expect(input).to.be.lengthOf(1);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Allow cookie deletion by going to cookies -> Domain Allowlist",
									"const jar = pm.cookies.jar();",
									"jar.unset(pm.environment.get(\"host\"), 'PHPSESSID', function (error) {",
									"    if (error) {",
									"        console.log(error.message)",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{domain}}/checkout/cart",
							"host": [
								"{{domain}}"
							],
							"path": [
								"checkout",
								"cart"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Errors",
			"item": [
				{
          "name": "Bad Cart ID",
          "item": [
            {
              "name": "M2: Guest Token API",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has token\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.token).to.be.a('string')",
                      "    pm.environment.set(\"gen_bad_guest_sgToken\", jsonData.token);",
                      "    pm.expect(jsonData.expiration).to.be.a('number');",
                      "});"
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{m2_endpoint_api_sgwebc}}/:cartId/token",
                  "host": [
                    "{{m2_endpoint_api_sgwebc}}"
                  ],
                  "path": [
                    ":cartId",
                    "token"
                  ],
                  "variable": [
                    {
                      "key": "cartId",
                      "value": "11111111111111111111111111111111"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "FE: bad masked cart id",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Load the HTML response to $",
                      "const pkg = require('cheerio')",
                      "const $ = pkg.load(pm.response.text());",
                      "",
                      "pm.test(\"Check redirected to app close event\", function () {",
                      "    const input = $('body.sgwebcheckout-close-index');",
                      "    pm.expect(input).to.be.lengthOf(1);",
                      "});"
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{m2_endpoint_fe_sgwebc}}/account/login?token={{gen_bad_guest_sgToken}}",
                  "host": [
                    "{{m2_endpoint_fe_sgwebc}}"
                  ],
                  "path": [
                    "account",
                    "login"
                  ],
                  "query": [
                    {
                      "key": "redirectTo",
                      "value": "registered",
                      "disabled": true
                    },
                    {
                      "key": "token",
                      "value": "{{gen_bad_guest_sgToken}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "M2A: read log",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Has log\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.log).to.not.be.undefined;",
                      "    jsonData.log.pop(); // empty line skip",
                      "    const lastLine = jsonData.log.pop();",
                      "    pm.expect(lastLine).to.contain('Could not locate masked quote ID');",
                      "});"
                    ],
                    "type": "text/javascript",
                    "packages": {}
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{gen_adminToken}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{m2_endpoint_api_sgwebc}}/log?page=1&lines=5",
                  "host": [
                    "{{m2_endpoint_api_sgwebc}}"
                  ],
                  "path": [
                    "log"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "lines",
                      "value": "5"
                    }
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "FE: expired token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Load the HTML response to $",
                  "const pkg = require('cheerio')",
                  "const $ = pkg.load(pm.response.text());",
                  "",
                  "pm.test(\"Check redirected to app close event\", function () {",
                  "    const input = $('body.sgwebcheckout-close-index');",
                  "    pm.expect(input).to.be.lengthOf(1);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{m2_endpoint_fe_sgwebc}}/account/login?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MjE2ODU2NDYsImlzcyI6IjE5Mi4xNjguMi4xMzUiLCJpYXQiOjE3MjE2ODU1ODYsImNhcnRfaWQiOiIxcGxobm1sS216OVhKUUlyU2dKMmNXYVk3Ym1QY28zaSJ9.FhrwDON4WAE-xLLEPkLzJJz73nOTt5BzYWTCot3j70k",
              "host": [
                "{{m2_endpoint_fe_sgwebc}}"
              ],
              "path": [
                "account",
                "login"
              ],
              "query": [
                {
                  "key": "redirectTo",
                  "value": "registered",
                  "disabled": true
                },
                {
                  "key": "token",
                  "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MjE2ODU2NDYsImlzcyI6IjE5Mi4xNjguMi4xMzUiLCJpYXQiOjE3MjE2ODU1ODYsImNhcnRfaWQiOiIxcGxobm1sS216OVhKUUlyU2dKMmNXYVk3Ym1QY28zaSJ9.FhrwDON4WAE-xLLEPkLzJJz73nOTt5BzYWTCot3j70k"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "M2A: read log",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Has log\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.log).to.not.be.undefined;",
                  "    jsonData.log.pop(); // empty line skip",
                  "    const lastLine = jsonData.log.pop();",
                  "    pm.expect(lastLine).to.contain('Invalid token received');",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{gen_adminToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{m2_endpoint_api_sgwebc}}/log?page=1&lines=5",
              "host": [
                "{{m2_endpoint_api_sgwebc}}"
              ],
              "path": [
                "log"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "lines",
                  "value": "5"
                }
              ]
            }
          },
          "response": []
        },
        {
					"name": "M2: token w/o cartId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
                  "pm.test(\"Status code is 400\", function () {",
                  "    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Has error\", function () {",
									"    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.be.a('string').to.contain('Invalid value');",
                  "    pm.expect(jsonData.parameters.fieldName).to.eq('cartId');",
                  "    pm.expect(jsonData.parameters.value).to.eq(':cartId');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{m2_endpoint_api_sgwebc}}/:cartId/token",
							"host": [
								"{{m2_endpoint_api_sgwebc}}"
							],
							"path": [
								":cartId",
								"token"
							],
							"variable": [
								{
									"key": "cartId",
									"value": ""
								}
							]
						}
					},
          "response": []
        },
        {
          "name": "M2A: log unauthorized",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{m2_endpoint_api_sgwebc}}/log?page=1&lines=5",
              "host": [
                "{{m2_endpoint_api_sgwebc}}"
              ],
              "path": [
                "log"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "lines",
                  "value": "5"
                }
              ]
            }
          },
					"response": []
				}
			]
		}
	]
}
