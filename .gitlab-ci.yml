image: $CI_REGISTRY/apite/shopgate/magento2/images/basic:$PHP-$MAGE_VER

variables:
  MYSQL_ROOT_PASSWORD: root
  MYSQL_DATABASE: magento
  MYSQL_USER: magento
  MYSQL_PASSWORD: magento
  ELASTICSEARCH_HOST: elasticsearch

services:
  - name: mariadb:10.4
    alias: mysql
    command:
      - "--default-authentication-plugin=mysql_native_password"
      - "--log-bin-trust-function-creators=1"
      - "--innodb_buffer_pool_size=1G"
  - name: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    alias: elasticsearch
    command: [ "elasticsearch", "-Ediscovery.type=single-node" ]
  - name: rabbitmq:3-management
    alias: rabbitmq
  - name: redis:6.2
    alias: redis

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG == null'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: always

stages:
  - build
  - test

test:
  stage: test
  tags:
    - build-arm64
  parallel:
    matrix:
      - PHP: "8.1"
        MAGE_VER: "2.4.5-p1"
      - PHP: "8.2"
        MAGE_VER: "2.4.7-p2" # if you change, the image needs to be created
  script:
    - export APP_URL="http://$HOSTNAME"
    - cd $MAGE_DIR
    - mkdir -p plugins/shopgate-webcheckout
    - cp -r $CI_PROJECT_DIR/* plugins/shopgate-webcheckout
    - composer require shopgate/webcheckout-magento2:@dev
    - bin/magento deploy:mode:set developer -s
    - bin/magento module:enable Shopgate_WebCheckout
    - bin/magento setup:upgrade --quiet
    - bin/magento setup:di:compile --quiet
    - bin/magento setup:static-content:deploy -f -a frontend -l en_US -t luma
    - bin/magento config:set shopgate_webcheckout/development/enable_logging 1
    - bin/magento cache:clean --quiet
    - cd plugins/shopgate-webcheckout/tests
    - npm run ci -- --env-var="host=$APP_URL"
      --reporter-htmlextra-export="$CI_PROJECT_DIR/postman-report.html"
      --reporter-junitfull-export="$CI_PROJECT_DIR/newman.junit.xml";
  artifacts:
    when: on_failure
    expire_in: 7 days
    reports:
      junit: newman.junit.xml
    paths:
      - ./postman-report.html

register_package:
  image: curlimages/curl:latest
  services: []
  stage: build
  only:
    - tags
  variables:
    URL: "$CI_SERVER_PROTOCOL://$CI_SERVER_HOST:$CI_SERVER_PORT/api/v4/projects/$CI_PROJECT_ID/packages/composer?job_token=$CI_JOB_TOKEN"
  before_script: []
  script:
    - version=$([[ -z "$CI_COMMIT_TAG" ]] && echo "branch=$CI_COMMIT_REF_NAME" || echo "tag=$CI_COMMIT_TAG")
    - insecure=$([ "$CI_SERVER_PROTOCOL" = "http" ] && echo "--insecure" || echo "")
    - response=$(curl -s -w "\n%{http_code}" $insecure --data $version $URL)
    - code=$(echo "$response" | tail -n 1)
    - body=$(echo "$response" | head -n 1)
    - if [ $code -eq 201 ]; then
        echo "Package created - Code $code - $body";
      else
        echo "Could not create package - Code $code - $body";
        exit 1;
      fi
